Pandas
###################################################################


Overview
===========================================================

Pandas（ぱんだぁず）は，Rライクな統計分析を可能にするライブラリです．基本的な分析，データの処理ができます．

Pandasでは，このライブラリ特有のデータタイプを使用します．一番，基本的なデータタイプは， DataFrame です．DataFrameは，行と列によって構成されているオブジェクトです．この DataFrame を操りながら，分析したいデータに様々な処理を施していきます．

Pandasの強みは，

- データを閲覧できる
- 行や列に格納されたデータを自在に操る
- データのインデックスを整える
- 時系列データを処理できる
- データの並び替え・グループ分け・データの再構成・基本的な
- 欠損値に対処する　

などです．

NumPy の講義ノートと同様に，この章ではPandas の基本的なデータタイプとメソッドを学習していきます．

なにはともあれ，使ってみましょう．

::

	>>> import pandas as pd
	>>> import numpy as np



Series
===========================================================


Pandasにおいて，最も大切なデータ・タイプはDataframeとSeriesです．Seriesは1つの変数から観察されたデータを列にしたものと理解するとよいでしょう．

とりあえず，Seriesを定義してみます．


::


	>>> s = pd.Series(np.random.randn(4), name='daily returns')
	>>> s
	0    0.813448
	1   -0.831657
	2   -0.061624
	3   -0.246928
	Name: daily returns, dtype: float64


このSeriesに対しては，NumPyのarrayみたいなような操作がおこなえます．


::

    >>> s.values[0]　#１行目だけ抜き出す
	0.8134478481823485
    >>> s*100 #100倍する
	0    81.344785
	1   -83.165706
	2    -6.162408
	3   -24.692812
	Name: daily returns, dtype: float


numpyのメソッドを使うことも許されています．

::

	>>> np.abs(s) #絶対値をとる
	0    0.813448
	1    0.831657
	2    0.061624
	3    0.246928
	Name: daily returns, dtype: float64

そして，Pandasオブジェクトには基本統計量を返すメソッドがあります．

::

	>>> s.describe()
	count    4.000000
	mean    -0.081690
	std      0.681036
	min     -0.831657
	25%     -0.393110
	50%     -0.154276
	75%      0.157144
	max      0.813448
	Name: daily returns, dtype: float64


という感じです．

それでは，最後にこのSeriesのインデックスを変更してみましょう．sのインデックスは今行の上から順番に0,1,2,3とインデックスが割り振られています．

::

	>>> s
	0    0.813448
	1   -0.831657
	2   -0.061624
	3   -0.246928
	Name: daily returns, dtype: float64


番号ではわかりにくいので，なまえを付けてみましょう．1から3に対して順番に，AMZN, AAPL, MSFT, GOOG　と名前をつけます．

::

	>>> s.index = ['AMZN', 'AAPL', 'MSFT', 'GOOG']
	>>> s
	AMZN   -1.609598
	AAPL    1.257105
	MSFT    1.229456
	GOOG   -0.806662
	Name: daily returns, dtype: float64


みやすくなりましたね．名前を使って，データへのアクセスができるようになりました．こうすｒことで，あるデータがSeriesにあるのかというチェックもできます．

::

	>>> s['AMZN']
	-1.6095979779534031
	>>> 'AAPL' in s 
	True




















